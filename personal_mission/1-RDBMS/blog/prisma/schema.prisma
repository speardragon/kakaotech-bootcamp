// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  user_id    Int       @id @default(autoincrement())
  username   String    @db.VarChar(50)
  email      String    @unique @db.VarChar(100)
  password   String    @db.VarChar(255)
  created_at DateTime  @default(now()) @db.Timestamp(0)
  posts      PostWithIndex[]
  comments   Comment[]
}

model PostWithIndex {
  post_id    Int       @id @default(autoincrement())
  title      String    @db.VarChar(100) @unique
  content    String    @db.VarChar(300)
  user_id    Int?      
  created_at DateTime  @default(now()) @db.Timestamp(0)
  updated_at DateTime  @default(now()) @updatedAt @db.Timestamp(0)
  user       User?     @relation(fields: [user_id], references: [user_id])
  comments   Comment[]
}

model PostWithoutIndex {
  post_id    Int       @id @default(autoincrement())
  title      String?   @db.VarChar(100)
  content    String?   @db.VarChar(300)
  user_id    Int?      @db.Int
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
}

model Comment {
  comment_id Int       @id @default(autoincrement())
  content    String    @db.Text
  user_id    Int?      
  post_id    Int?      
  created_at DateTime  @default(now()) @db.Timestamp(0)
  user       User?     @relation(fields: [user_id], references: [user_id])
  post       PostWithIndex? @relation(fields: [post_id], references: [post_id])
}
